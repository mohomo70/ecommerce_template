# Generated by Django 4.2.24 on 2025-09-26 10:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')])),
                ('title', models.CharField(max_length=200)),
                ('review', models.TextField()),
                ('is_verified_purchase', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=True)),
                ('helpful_votes', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='catalog.product')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_number', models.CharField(max_length=20, unique=True)),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('general', 'General Inquiry'), ('order', 'Order Issue'), ('payment', 'Payment Issue'), ('technical', 'Technical Support'), ('refund', 'Refund Request'), ('other', 'Other')], default='general', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('waiting_customer', 'Waiting for Customer'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_tickets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReviewVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_helpful', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='support.productreview')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_votes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=300)),
                ('answer', models.TextField()),
                ('category', models.CharField(default='general', max_length=50)),
                ('is_published', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['order', 'question'],
                'indexes': [models.Index(fields=['category'], name='support_faq_categor_350953_idx'), models.Index(fields=['is_published'], name='support_faq_is_publ_3037e8_idx')],
            },
        ),
        migrations.CreateModel(
            name='TicketMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_internal', models.BooleanField(default=False, help_text='Internal note not visible to customer')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_messages', to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='support.supportticket')),
            ],
            options={
                'ordering': ['created_at'],
                'indexes': [models.Index(fields=['ticket'], name='support_tic_ticket__318600_idx'), models.Index(fields=['sender'], name='support_tic_sender__b8ff9b_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['ticket_number'], name='support_sup_ticket__4a7d4b_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['customer'], name='support_sup_custome_b304fe_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['status'], name='support_sup_status_c35d7c_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['priority'], name='support_sup_priorit_049754_idx'),
        ),
        migrations.AddIndex(
            model_name='reviewvote',
            index=models.Index(fields=['review'], name='support_rev_review__16476a_idx'),
        ),
        migrations.AddIndex(
            model_name='reviewvote',
            index=models.Index(fields=['user'], name='support_rev_user_id_d3ee9d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reviewvote',
            unique_together={('review', 'user')},
        ),
        migrations.AddIndex(
            model_name='productreview',
            index=models.Index(fields=['product'], name='support_pro_product_c52ee1_idx'),
        ),
        migrations.AddIndex(
            model_name='productreview',
            index=models.Index(fields=['customer'], name='support_pro_custome_4616cc_idx'),
        ),
        migrations.AddIndex(
            model_name='productreview',
            index=models.Index(fields=['rating'], name='support_pro_rating_cd52f0_idx'),
        ),
        migrations.AddIndex(
            model_name='productreview',
            index=models.Index(fields=['is_approved'], name='support_pro_is_appr_ed5c87_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productreview',
            unique_together={('product', 'customer')},
        ),
    ]
